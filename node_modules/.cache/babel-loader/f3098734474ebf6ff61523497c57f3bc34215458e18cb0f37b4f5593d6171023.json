{"ast":null,"code":"import { toast } from 'react-toastify';\nimport copy from \"copy-to-clipboard\";\n\n//Função de copiar arquivo gerado\n\nexport const Done = (item, datTime, finishSolution) => {\n  const {\n    name,\n    problem,\n    validation\n  } = item;\n  const cop = `\nANALISTA: ${name}\n------------------------------------------\nPROBLEMA CONSTATADO: ${problem}\n------------------------------------------\nSOLUÇÃO: ${datTime.toDateString()}\n\\n${finishSolution}\n------------------------------------------\nVALIDADO POR: ${validation}\n------------------------------------------`;\n  copy(cop);\n  toast.success(\"Copiado!\");\n};\n_c = Done;\nvar _c;\n$RefreshReg$(_c, \"Done\");","map":{"version":3,"names":["toast","copy","Done","item","datTime","finishSolution","name","problem","validation","cop","toDateString","success","_c","$RefreshReg$"],"sources":["/home/oem/Documentos/PROJETOS/cronologia/src/components/Done/index.tsx"],"sourcesContent":["import { toast } from 'react-toastify';\nimport copy from \"copy-to-clipboard\";  \n\n//Função de copiar arquivo gerado\n\nexport const Done=(item:any,datTime:Date,finishSolution:object)=>\n{\n \nconst {name,problem, validation} = item ;\n\nconst cop =`\nANALISTA: ${name}\n------------------------------------------\nPROBLEMA CONSTATADO: ${problem}\n------------------------------------------\nSOLUÇÃO: ${datTime.toDateString()}\n\\n${finishSolution}\n------------------------------------------\nVALIDADO POR: ${validation}\n------------------------------------------`;\n\ncopy(cop);\ntoast.success(\"Copiado!\")\n\n}"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;;AAEpC;;AAEA,OAAO,MAAMC,IAAI,GAACA,CAACC,IAAQ,EAACC,OAAY,EAACC,cAAqB,KAC9D;EAEA,MAAM;IAACC,IAAI;IAACC,OAAO;IAAEC;EAAU,CAAC,GAAGL,IAAI;EAEvC,MAAMM,GAAG,GAAG;AACZ,YAAYH,IAAK;AACjB;AACA,uBAAuBC,OAAQ;AAC/B;AACA,WAAWH,OAAO,CAACM,YAAY,EAAG;AAClC,IAAIL,cAAe;AACnB;AACA,gBAAgBG,UAAW;AAC3B,2CAA2C;EAE3CP,IAAI,CAACQ,GAAG,CAAC;EACTT,KAAK,CAACW,OAAO,CAAC,UAAU,CAAC;AAEzB,CAAC;AAAAC,EAAA,GAnBYV,IAAI;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}